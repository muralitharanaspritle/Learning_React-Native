function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import { TextInput, StyleSheet } from 'react-native';
const defaultProps = {
  maxLength: 2,
  returnKeyType: 'next'
};
const Input = /*#__PURE__*/React.forwardRef(({
  style,
  ...attributes
}, ref) => {
  return /*#__PURE__*/React.createElement(TextInput, _extends({}, attributes, {
    ref: ref,
    blurOnSubmit: false,
    keyboardType: "numeric",
    style: [styles.input, style]
  }));
});
const styles = StyleSheet.create({
  input: {
    textAlign: 'center'
  }
});

const areEqual = (prevProps, nextProps) => {
  return prevProps.value === nextProps.value;
};

Input.defaultProps = defaultProps;
export default /*#__PURE__*/React.memo(Input, areEqual);
//# sourceMappingURL=Input.js.map